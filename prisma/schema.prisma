// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Cart {
  id Int @id @default(autoincrement())
  user_id Int
  created_at DateTime @default(now())
  itens cartItem[]
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

}

model cartItem{
 id Int @id @default(autoincrement())
 cart_id Int
 product_id Int
 quantity Int @default(1)
 cart Cart @relation(fields: [cart_id], references: [id], onDelete: Cascade)

}

// Use a configuração timestamps: true do prisma para gerar as colunas created_at e updated_at

model User {
  id Int @id @default(autoincrement())
  firstname String
  surname String
  email String @unique
  password String
  created_ad DateTime @default(now())
  updated_ad DateTime @updatedAt
  cart Cart[]
}

// O objetivo deste requisito é criar a tabela de opções do produto no banco de dados utilizando o Sequelize ORM.
// A tabela deve conter as colunas a seguir:

//model Product {
//  id Int @id
//  itens ProductOptions[]
//}

//model ProductOptions {
//  id Int @id @default(autoincrement())
// product_id Int // vem tabela produto
//  title String
// shape Role @default(square)
//  radius Int @default(0) 
//  type  OptionType @default(TEXT) 
//  values String
//  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
//}

//enum Role {
// square
// circle
//}

//enum OptionType {
//  TEXT
//  COLOR
//}